#!/bin/bash
ROOT_DIR=`dirname "$0"`/..
SHORT_NAME=`basename "$0"`

cd $ROOT_DIR || exit 1
mkdir -p test_results || exit 1

FAIL_COUNT=0
TOTAL_COUNT=0

while [[ $# != 0 ]]; do
    FAIL=0
    cat "test_cases/$1" | bin/runner bin/ltg alt > "test_results/$1.ref"
    cat "test_cases/$1" | simulator/simdriver > "test_results/$1.out" 2> /dev/null
    sed '
      2d;
      s/AppLimitExceeded/Native.AppLimitExceeded/
      s/Something applied to a non-number/Native.Error/
      s/help j-value is a non-number (health still decremented)/Native.Error/
      s/attack j-value is a non-number (health still decremented)/Native.Error/
      s/help n-value greater than vitality of \[i\]/Native.Error/
      s/attack n-value greater than vitality of \[i\]/Native.Error/
      s/tried to get from a dead cell/Native.Error/
      s/Dead slot application/Native.Error/
    ' "test_results/$1.out" > "test_results/$1.out.clean"

    sed '
      s/Invalid_argument(_)/slot number out of range/
      s/Invalid_argument("index out of bounds")/slot number out of range/
    ' "test_results/$1.ref" > "test_results/$1.ref.clean"

    if ! diff "test_results/$1.ref.clean" "test_results/$1.out.clean" ; then
        FAIL=1
    fi
    if [ $FAIL -ne '0' ]; then
        echo "Test failed: $1"
        FAIL_COUNT=$(( $FAIL_COUNT + 1 ))
    fi
    TOTAL_COUNT=$(( $TOTAL_COUNT + 1 ))
    shift 1
done

echo "Ran $TOTAL_COUNT tests, got $FAIL_COUNT failures."
if [[ $FAIL_COUNT != 0 ]]; then
    exit 1
fi
